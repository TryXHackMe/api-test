// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  name         String
  email        String         @unique
  password     String
  role         String         @default("customer")
  products     Product[]
  RefreshToken RefreshToken[]
  updatedAt    DateTime       @updatedAt
  createdAt    DateTime       @default(now())
  carts        Carts[]
  Order        Order[]
}

model RefreshToken {
  id      Int    @id @default(autoincrement())
  token   String
  user_id Int
  user    User   @relation(fields: [user_id], references: [id])
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int
  user_id     Int
  user        User        @relation(fields: [user_id], references: [id])
  updatedAt   DateTime    @updatedAt
  createdAt   DateTime    @default(now())
  carts       Carts[]
  OrderItem   OrderItem[]
}

model Carts {
  id         Int      @id @default(autoincrement())
  quantity   Int
  product_id Int
  user_id    Int
  is_active  Boolean  @default(true)
  product    Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  updatedAt  DateTime @updatedAt
  createdAt  DateTime @default(now())
}

model Order {
  id        Int         @id @default(autoincrement())
  user_id   Int
  total     Int
  status    String      @default("pending")
  updatedAt DateTime    @updatedAt
  createdAt DateTime    @default(now())
  items     OrderItem[]
  user      User        @relation(fields: [user_id], references: [id])
}

model OrderItem {
  id         Int     @id @default(autoincrement())
  order_id   Int
  product_id Int
  quantity   Int
  price      Int
  product    Product @relation(fields: [product_id], references: [id])
  order      Order   @relation(fields: [order_id], references: [id])
}
